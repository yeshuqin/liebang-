{"remainingRequest":"/Users/gigi/webspace/liebang/web-admin/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/gigi/webspace/liebang/web-admin/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Users/gigi/webspace/liebang/web-admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/Users/gigi/webspace/liebang/web-admin/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!/Users/gigi/webspace/liebang/web-admin/src/layout/components/TagsView/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gigi/webspace/liebang/web-admin/src/layout/components/TagsView/index.vue","mtime":1590559088307},{"path":"/Users/gigi/webspace/liebang/web-admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gigi/webspace/liebang/web-admin/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gigi/webspace/liebang/web-admin/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gigi/webspace/liebang/web-admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gigi/webspace/liebang/web-admin/node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _toConsumableArray from \"/Users/gigi/webspace/liebang/web-admin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/gigi/webspace/liebang/web-admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ScrollPane from \"./ScrollPane\";\nimport path from 'path';\nexport default {\n  components: {\n    ScrollPane: ScrollPane\n  },\n  data: function data() {\n    return {\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  computed: {\n    visitedViews: function visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes: function routes() {\n      return [];\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive: function isActive(route) {\n      return route.path === this.$route.path;\n    },\n    isAffix: function isAffix(tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    filterAffixTags: function filterAffixTags(routes) {\n      var _this = this;\n\n      var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n      var tags = [];\n      routes.forEach(function (route) {\n        if (route.meta && route.meta.affix) {\n          var tagPath = path.resolve(basePath, route.path);\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: _objectSpread({}, route.meta)\n          });\n        }\n\n        if (route.children) {\n          var tempTags = _this.filterAffixTags(route.children, route.path);\n\n          if (tempTags.length >= 1) {\n            tags = [].concat(_toConsumableArray(tags), _toConsumableArray(tempTags));\n          }\n        }\n      });\n      return tags;\n    },\n    initTags: function initTags() {\n      var affixTags = this.affixTags = this.filterAffixTags(this.routes);\n\n      var _iterator = _createForOfIteratorHelper(affixTags),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var tag = _step.value;\n\n          // Must have tag name\n          if (tag.name) {\n            this.$store.dispatch('tagsView/addVisitedView', tag);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    addTags: function addTags() {\n      var name = this.$route.name;\n\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n      }\n\n      return false;\n    },\n    moveToCurrentTag: function moveToCurrentTag() {\n      var _this2 = this;\n\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        var _iterator2 = _createForOfIteratorHelper(tags),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var tag = _step2.value;\n\n            if (tag.to.path === _this2.$route.path) {\n              _this2.$refs.scrollPane.moveToTarget(tag); // when query is different then update\n\n\n              if (tag.to.fullPath !== _this2.$route.fullPath) {\n                _this2.$store.dispatch('tagsView/updateVisitedView', _this2.$route);\n              }\n\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n    },\n    closeSelectedTag: function closeSelectedTag(view) {\n      var _this3 = this;\n\n      this.$store.dispatch('tagsView/delView', view).then(function (_ref) {\n        var visitedViews = _ref.visitedViews;\n\n        if (_this3.isActive(view)) {\n          _this3.toLastView(visitedViews, view);\n        }\n      });\n    },\n    toLastView: function toLastView(visitedViews, view) {\n      var latestView = visitedViews.slice(-1)[0];\n\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu: function openMenu(tag, e) {\n      var menuMinWidth = 105;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n\n      var offsetWidth = this.$el.offsetWidth; // container width\n\n      var maxLeft = offsetWidth - menuMinWidth; // left boundary\n\n      var left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    },\n    handleScroll: function handleScroll() {\n      this.closeMenu();\n    }\n  }\n};",null]}